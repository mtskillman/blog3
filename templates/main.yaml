AWSTemplateFormatVersion: '2010-09-09'
Description: blog3 master stack

Parameters:
  apiStageName:
    Type: String
    AllowedPattern: "[a-z0-9]+"
    Default: dev

Resources:
  posts:
    Type: AWS::DynamoDB::Table
    Properties:
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: blogs-table
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: blogId
          AttributeType: S
      KeySchema:
        - AttributeName: blogId
          KeyType: HASH

  myApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: foo
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: something

  apiRootMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      Authorization: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: GET
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt mainLambda.Arn
        ResourceId: !GetAtt myAPi.RootResourceId
        RestApiId: !Ref myApi


  apiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - apiRootMethod
    Properties:
      RestApiId: !Ref myApi
      StageName: !Ref apiStageName


  mainLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref codeBucket
        S3Key: code.zip
      FunctionName: mainLambda
      Handler: main.handler
      MemorySize: 128
      Role: !GetAtt mainLambdaRole.Arn
      Runtime: python3.8

  mainLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - dynamodb:GetItem
                Effect: Allow
                Resource: !GetAtt posts.Arn
          PolicyName: lambda

  codeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: myBucket-matt-789-foo

Outputs:
  apiInvokeURL:
    Value: !Sub https://${myApi}.execute-api.${AWS::Region}.amazonaws.com/${apiStageName}
